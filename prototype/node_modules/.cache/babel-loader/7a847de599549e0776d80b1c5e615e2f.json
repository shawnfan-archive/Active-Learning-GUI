{"remainingRequest":"/Users/shawnfan/Dropbox/active_learning_20191115/Active-Learning-GUI/prototype/node_modules/babel-loader/lib/index.js!/Users/shawnfan/Dropbox/active_learning_20191115/Active-Learning-GUI/prototype/node_modules/eslint-loader/index.js??ref--13-0!/Users/shawnfan/Dropbox/active_learning_20191115/Active-Learning-GUI/env/lib/python3.7/site-packages/werkzeug/debug/shared/debugger.js","dependencies":[{"path":"/Users/shawnfan/Dropbox/active_learning_20191115/Active-Learning-GUI/env/lib/python3.7/site-packages/werkzeug/debug/shared/debugger.js","mtime":1573853362383},{"path":"/Users/shawnfan/Dropbox/active_learning_20191115/Active-Learning-GUI/prototype/node_modules/cache-loader/dist/cjs.js","mtime":1573853364435},{"path":"/Users/shawnfan/Dropbox/active_learning_20191115/Active-Learning-GUI/prototype/node_modules/babel-loader/lib/index.js","mtime":1573853364298},{"path":"/Users/shawnfan/Dropbox/active_learning_20191115/Active-Learning-GUI/prototype/node_modules/eslint-loader/index.js","mtime":1573853365760}],"contextDependencies":[],"result":["$(function () {\n  if (!EVALEX_TRUSTED) {\n    initPinBox();\n  }\n  /**\n   * if we are in console mode, show the console.\n   */\n\n\n  if (CONSOLE_MODE && EVALEX) {\n    openShell(null, $('div.console div.inner').empty(), 0);\n  }\n\n  $(\"div.detail\").click(function () {\n    $(\"div.traceback\").get(0).scrollIntoView(false);\n  });\n  $('div.traceback div.frame').each(function () {\n    var target = $('pre', this),\n        consoleNode = null,\n        frameID = this.id.substring(6);\n    target.click(function () {\n      $(this).parent().toggleClass('expanded');\n    });\n    /**\n     * Add an interactive console to the frames\n     */\n\n    if (EVALEX && target.is('.current')) {\n      $('<img src=\"?__debugger__=yes&cmd=resource&f=console.png\">').attr('title', 'Open an interactive python shell in this frame').click(function () {\n        consoleNode = openShell(consoleNode, target, frameID);\n        return false;\n      }).prependTo(target);\n    }\n  });\n  /**\n   * toggle traceback types on click.\n   */\n\n  $('h2.traceback').click(function () {\n    $(this).next().slideToggle('fast');\n    $('div.plain').slideToggle('fast');\n  }).css('cursor', 'pointer');\n  $('div.plain').hide();\n  /**\n   * Add extra info (this is here so that only users with JavaScript\n   * enabled see it.)\n   */\n\n  $('span.nojavascript').removeClass('nojavascript').html('<p>To switch between the interactive traceback and the plaintext ' + 'one, you can click on the \"Traceback\" headline.  From the text ' + 'traceback you can also create a paste of it. ' + (!EVALEX ? '' : 'For code execution mouse-over the frame you want to debug and ' + 'click on the console icon on the right side.' + '<p>You can execute arbitrary Python code in the stack frames and ' + 'there are some extra helpers available for introspection:' + '<ul><li><code>dump()</code> shows all variables in the frame' + '<li><code>dump(obj)</code> dumps all that\\'s known about the object</ul>'));\n  /**\n   * Add the pastebin feature\n   */\n\n  $('div.plain form').submit(function () {\n    var label = $('input[type=\"submit\"]', this);\n    var old_val = label.val();\n    label.val('submitting...');\n    $.ajax({\n      dataType: 'json',\n      url: document.location.pathname,\n      data: {\n        __debugger__: 'yes',\n        tb: TRACEBACK,\n        cmd: 'paste',\n        s: SECRET\n      },\n      success: function success(data) {\n        $('div.plain span.pastemessage').removeClass('pastemessage').text('Paste created: ').append($('<a>#' + data.id + '</a>').attr('href', data.url));\n      },\n      error: function error() {\n        alert('Error: Could not submit paste.  No network connection?');\n        label.val(old_val);\n      }\n    });\n    return false;\n  }); // if we have javascript we submit by ajax anyways, so no need for the\n  // not scaling textarea.\n\n  var plainTraceback = $('div.plain textarea');\n  plainTraceback.replaceWith($('<pre>').text(plainTraceback.text()));\n});\n\nfunction initPinBox() {\n  $('.pin-prompt form').submit(function (evt) {\n    evt.preventDefault();\n    var pin = this.pin.value;\n    var btn = this.btn;\n    btn.disabled = true;\n    $.ajax({\n      dataType: 'json',\n      url: document.location.pathname,\n      data: {\n        __debugger__: 'yes',\n        cmd: 'pinauth',\n        pin: pin,\n        s: SECRET\n      },\n      success: function success(data) {\n        btn.disabled = false;\n\n        if (data.auth) {\n          EVALEX_TRUSTED = true;\n          $('.pin-prompt').fadeOut();\n        } else {\n          if (data.exhausted) {\n            alert('Error: too many attempts.  Restart server to retry.');\n          } else {\n            alert('Error: incorrect pin');\n          }\n        }\n\n        console.log(data);\n      },\n      error: function error() {\n        btn.disabled = false;\n        alert('Error: Could not verify PIN.  Network error?');\n      }\n    });\n  });\n}\n\nfunction promptForPin() {\n  if (!EVALEX_TRUSTED) {\n    $.ajax({\n      url: document.location.pathname,\n      data: {\n        __debugger__: 'yes',\n        cmd: 'printpin',\n        s: SECRET\n      }\n    });\n    $('.pin-prompt').fadeIn(function () {\n      $('.pin-prompt input[name=\"pin\"]').focus();\n    });\n  }\n}\n/**\n * Helper function for shell initialization\n */\n\n\nfunction openShell(consoleNode, target, frameID) {\n  promptForPin();\n  if (consoleNode) return consoleNode.slideToggle('fast');\n  consoleNode = $('<pre class=\"console\">').appendTo(target.parent()).hide();\n  var historyPos = 0,\n      history = [''];\n  var output = $('<div class=\"output\">[console ready]</div>').appendTo(consoleNode);\n  var form = $('<form>&gt;&gt;&gt; </form>').submit(function () {\n    var cmd = command.val();\n    $.get('', {\n      __debugger__: 'yes',\n      cmd: cmd,\n      frm: frameID,\n      s: SECRET\n    }, function (data) {\n      var tmp = $('<div>').html(data);\n      $('span.extended', tmp).each(function () {\n        var hidden = $(this).wrap('<span>').hide();\n        hidden.parent().append($('<a href=\"#\" class=\"toggle\">&nbsp;&nbsp;</a>').click(function () {\n          hidden.toggle();\n          $(this).toggleClass('open');\n          return false;\n        }));\n      });\n      output.append(tmp);\n      command.focus();\n      consoleNode.scrollTop(consoleNode.get(0).scrollHeight);\n      var old = history.pop();\n      history.push(cmd);\n      if (typeof old != 'undefined') history.push(old);\n      historyPos = history.length - 1;\n    });\n    command.val('');\n    return false;\n  }).appendTo(consoleNode);\n  var command = $('<input type=\"text\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\">').appendTo(form).keydown(function (e) {\n    if (e.key == 'l' && e.ctrlKey) {\n      output.text('--- screen cleared ---');\n      return false;\n    } else if (e.charCode == 0 && (e.keyCode == 38 || e.keyCode == 40)) {\n      //   handle up arrow and down arrow\n      if (e.keyCode == 38 && historyPos > 0) historyPos--;else if (e.keyCode == 40 && historyPos < history.length) historyPos++;\n      command.val(history[historyPos]);\n      return false;\n    }\n  });\n  return consoleNode.slideDown('fast', function () {\n    command.focus();\n  });\n}",{"version":3,"sources":["/Users/shawnfan/Dropbox/active_learning_20191115/Active-Learning-GUI/env/lib/python3.7/site-packages/werkzeug/debug/shared/debugger.js"],"names":["$","EVALEX_TRUSTED","initPinBox","CONSOLE_MODE","EVALEX","openShell","empty","click","get","scrollIntoView","each","target","consoleNode","frameID","id","substring","parent","toggleClass","is","attr","prependTo","next","slideToggle","css","hide","removeClass","html","submit","label","old_val","val","ajax","dataType","url","document","location","pathname","data","__debugger__","tb","TRACEBACK","cmd","s","SECRET","success","text","append","error","alert","plainTraceback","replaceWith","evt","preventDefault","pin","value","btn","disabled","auth","fadeOut","exhausted","console","log","promptForPin","fadeIn","focus","appendTo","historyPos","history","output","form","command","frm","tmp","hidden","wrap","toggle","scrollTop","scrollHeight","old","pop","push","length","keydown","e","key","ctrlKey","charCode","keyCode","slideDown"],"mappings":"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","sourcesContent":["$(function() {\n  if (!EVALEX_TRUSTED) {\n    initPinBox();\n  }\n\n  /**\n   * if we are in console mode, show the console.\n   */\n  if (CONSOLE_MODE && EVALEX) {\n    openShell(null, $('div.console div.inner').empty(), 0);\n  }\n\n  $(\"div.detail\").click(function() {\n    $(\"div.traceback\").get(0).scrollIntoView(false);\n  });\n\n  $('div.traceback div.frame').each(function() {\n    var\n      target = $('pre', this),\n      consoleNode = null,\n      frameID = this.id.substring(6);\n\n    target.click(function() {\n      $(this).parent().toggleClass('expanded');\n    });\n\n    /**\n     * Add an interactive console to the frames\n     */\n    if (EVALEX && target.is('.current')) {\n      $('<img src=\"?__debugger__=yes&cmd=resource&f=console.png\">')\n        .attr('title', 'Open an interactive python shell in this frame')\n        .click(function() {\n          consoleNode = openShell(consoleNode, target, frameID);\n          return false;\n        })\n        .prependTo(target);\n    }\n  });\n\n  /**\n   * toggle traceback types on click.\n   */\n  $('h2.traceback').click(function() {\n    $(this).next().slideToggle('fast');\n    $('div.plain').slideToggle('fast');\n  }).css('cursor', 'pointer');\n  $('div.plain').hide();\n\n  /**\n   * Add extra info (this is here so that only users with JavaScript\n   * enabled see it.)\n   */\n  $('span.nojavascript')\n    .removeClass('nojavascript')\n    .html('<p>To switch between the interactive traceback and the plaintext ' +\n          'one, you can click on the \"Traceback\" headline.  From the text ' +\n          'traceback you can also create a paste of it. ' + (!EVALEX ? '' :\n          'For code execution mouse-over the frame you want to debug and ' +\n          'click on the console icon on the right side.' +\n          '<p>You can execute arbitrary Python code in the stack frames and ' +\n          'there are some extra helpers available for introspection:' +\n          '<ul><li><code>dump()</code> shows all variables in the frame' +\n          '<li><code>dump(obj)</code> dumps all that\\'s known about the object</ul>'));\n\n  /**\n   * Add the pastebin feature\n   */\n  $('div.plain form')\n    .submit(function() {\n      var label = $('input[type=\"submit\"]', this);\n      var old_val = label.val();\n      label.val('submitting...');\n      $.ajax({\n        dataType:     'json',\n        url:          document.location.pathname,\n        data:         {__debugger__: 'yes', tb: TRACEBACK, cmd: 'paste',\n                       s: SECRET},\n        success:      function(data) {\n          $('div.plain span.pastemessage')\n            .removeClass('pastemessage')\n            .text('Paste created: ')\n            .append($('<a>#' + data.id + '</a>').attr('href', data.url));\n        },\n        error:        function() {\n          alert('Error: Could not submit paste.  No network connection?');\n          label.val(old_val);\n        }\n      });\n      return false;\n    });\n\n  // if we have javascript we submit by ajax anyways, so no need for the\n  // not scaling textarea.\n  var plainTraceback = $('div.plain textarea');\n  plainTraceback.replaceWith($('<pre>').text(plainTraceback.text()));\n});\n\nfunction initPinBox() {\n  $('.pin-prompt form').submit(function(evt) {\n    evt.preventDefault();\n    var pin = this.pin.value;\n    var btn = this.btn;\n    btn.disabled = true;\n    $.ajax({\n      dataType: 'json',\n      url: document.location.pathname,\n      data: {__debugger__: 'yes', cmd: 'pinauth', pin: pin,\n             s: SECRET},\n      success: function(data) {\n        btn.disabled = false;\n        if (data.auth) {\n          EVALEX_TRUSTED = true;\n          $('.pin-prompt').fadeOut();\n        } else {\n          if (data.exhausted) {\n            alert('Error: too many attempts.  Restart server to retry.');\n          } else {\n            alert('Error: incorrect pin');\n          }\n        }\n        console.log(data);\n      },\n      error: function() {\n        btn.disabled = false;\n        alert('Error: Could not verify PIN.  Network error?');\n      }\n    });\n  });\n}\n\nfunction promptForPin() {\n  if (!EVALEX_TRUSTED) {\n    $.ajax({\n      url: document.location.pathname,\n      data: {__debugger__: 'yes', cmd: 'printpin', s: SECRET}\n    });\n    $('.pin-prompt').fadeIn(function() {\n      $('.pin-prompt input[name=\"pin\"]').focus();\n    });\n  }\n}\n\n\n/**\n * Helper function for shell initialization\n */\nfunction openShell(consoleNode, target, frameID) {\n  promptForPin();\n  if (consoleNode)\n    return consoleNode.slideToggle('fast');\n  consoleNode = $('<pre class=\"console\">')\n    .appendTo(target.parent())\n    .hide()\n  var historyPos = 0, history = [''];\n  var output = $('<div class=\"output\">[console ready]</div>')\n    .appendTo(consoleNode);\n  var form = $('<form>&gt;&gt;&gt; </form>')\n    .submit(function() {\n      var cmd = command.val();\n      $.get('', {\n          __debugger__: 'yes', cmd: cmd, frm: frameID, s: SECRET}, function(data) {\n        var tmp = $('<div>').html(data);\n        $('span.extended', tmp).each(function() {\n          var hidden = $(this).wrap('<span>').hide();\n          hidden\n            .parent()\n            .append($('<a href=\"#\" class=\"toggle\">&nbsp;&nbsp;</a>')\n              .click(function() {\n                hidden.toggle();\n                $(this).toggleClass('open')\n                return false;\n              }));\n        });\n        output.append(tmp);\n        command.focus();\n        consoleNode.scrollTop(consoleNode.get(0).scrollHeight);\n        var old = history.pop();\n        history.push(cmd);\n        if (typeof old != 'undefined')\n          history.push(old);\n        historyPos = history.length - 1;\n      });\n      command.val('');\n      return false;\n    }).\n    appendTo(consoleNode);\n\n  var command = $('<input type=\"text\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\">')\n    .appendTo(form)\n    .keydown(function(e) {\n      if (e.key == 'l' && e.ctrlKey) {\n        output.text('--- screen cleared ---');\n        return false;\n      }\n      else if (e.charCode == 0 && (e.keyCode == 38 || e.keyCode == 40)) {\n        //   handle up arrow and down arrow\n        if (e.keyCode == 38 && historyPos > 0)\n          historyPos--;\n        else if (e.keyCode == 40 && historyPos < history.length)\n          historyPos++;\n        command.val(history[historyPos]);\n        return false;\n      }\n    });\n\n  return consoleNode.slideDown('fast', function() {\n    command.focus();\n  });\n}\n"]}]}