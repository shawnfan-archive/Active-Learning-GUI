{"remainingRequest":"/Users/shawnfan/Dropbox/active_learning_20191115/Active-Learning-GUI/prototype/node_modules/babel-loader/lib/index.js!/Users/shawnfan/Dropbox/active_learning_20191115/Active-Learning-GUI/prototype/node_modules/vuetify/lib/components/VCalendar/util/props.js","dependencies":[{"path":"/Users/shawnfan/Dropbox/active_learning_20191115/Active-Learning-GUI/prototype/node_modules/vuetify/lib/components/VCalendar/util/props.js","mtime":499162500000},{"path":"/Users/shawnfan/Dropbox/active_learning_20191115/Active-Learning-GUI/prototype/node_modules/cache-loader/dist/cjs.js","mtime":1573853364435},{"path":"/Users/shawnfan/Dropbox/active_learning_20191115/Active-Learning-GUI/prototype/node_modules/babel-loader/lib/index.js","mtime":1573853364298}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.regexp.split\";\nimport { validateTimestamp, parseDate, DAYS_IN_WEEK } from \"./timestamp\";\nexport default {\n  base: {\n    start: {\n      type: String,\n      validate: validateTimestamp,\n      default: function _default() {\n        return parseDate(new Date()).date;\n      }\n    },\n    end: {\n      type: String,\n      validate: validateTimestamp\n    },\n    weekdays: {\n      type: [Array, String],\n      default: function _default() {\n        return [0, 1, 2, 3, 4, 5, 6];\n      },\n      validate: function validate(input) {\n        if (typeof input === 'string') {\n          input = input.split(',');\n        }\n\n        if (Array.isArray(input)) {\n          if (input.length > DAYS_IN_WEEK || input.length === 0) {\n            return false;\n          }\n\n          for (var i = 0; i < input.length; i++) {\n            var x = input[i];\n\n            if (!validateNumber(x) || x < 0 || x >= DAYS_IN_WEEK) {\n              return false;\n            }\n          }\n\n          return true;\n        }\n\n        return false;\n      }\n    },\n    hideHeader: {\n      type: Boolean,\n      default: false\n    },\n    shortWeekdays: {\n      type: Boolean,\n      default: true\n    },\n    weekdayFormat: {\n      type: Function,\n      default: null\n    },\n    dayFormat: {\n      type: Function,\n      default: null\n    }\n  },\n  intervals: {\n    maxDays: {\n      type: Number,\n      default: 7\n    },\n    shortIntervals: {\n      type: Boolean,\n      default: true\n    },\n    intervalHeight: {\n      type: [Number, String],\n      default: 40,\n      validate: validateNumber\n    },\n    intervalWidth: {\n      type: [Number, String],\n      default: 45,\n      validate: validateNumber\n    },\n    intervalMinutes: {\n      type: [Number, String],\n      default: 60,\n      validate: validateNumber\n    },\n    firstInterval: {\n      type: [Number, String],\n      default: 0,\n      validate: validateNumber\n    },\n    intervalCount: {\n      type: [Number, String],\n      default: 24,\n      validate: validateNumber\n    },\n    intervalFormat: {\n      type: Function,\n      default: null\n    },\n    intervalStyle: {\n      type: Function,\n      default: null\n    },\n    showIntervalLabel: {\n      type: Function,\n      default: null\n    }\n  },\n  weeks: {\n    minWeeks: {\n      validate: validateNumber,\n      default: 1\n    },\n    shortMonths: {\n      type: Boolean,\n      default: true\n    },\n    showMonthOnFirst: {\n      type: Boolean,\n      default: true\n    },\n    monthFormat: {\n      type: Function,\n      default: null\n    }\n  },\n  calendar: {\n    type: {\n      type: String,\n      default: 'month'\n    },\n    value: {\n      type: String,\n      validate: validateTimestamp\n    }\n  },\n  events: {\n    events: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    eventStart: {\n      type: String,\n      default: 'start'\n    },\n    eventEnd: {\n      type: String,\n      default: 'end'\n    },\n    eventHeight: {\n      type: Number,\n      default: 20\n    },\n    eventColor: {\n      type: [String, Function],\n      default: 'secondary'\n    },\n    eventTextColor: {\n      type: [String, Function],\n      default: 'white'\n    },\n    eventName: {\n      type: [String, Function],\n      default: 'name'\n    },\n    eventOverlapThreshold: {\n      type: Number,\n      default: 60\n    },\n    eventMore: {\n      type: Boolean,\n      default: true\n    },\n    eventMoreText: {\n      type: String,\n      default: '$vuetify.calendar.moreEvents'\n    },\n    eventRipple: {\n      type: [Boolean, Object],\n      default: null\n    },\n    eventMarginBottom: {\n      type: Number,\n      default: 1\n    }\n  }\n};\nexport function validateNumber(input) {\n  return isFinite(parseInt(input));\n}",{"version":3,"sources":["/Users/shawnfan/Dropbox/active_learning_20191115/Active-Learning-GUI/prototype/node_modules/vuetify/lib/components/VCalendar/util/props.js"],"names":["validateTimestamp","parseDate","DAYS_IN_WEEK","base","start","type","String","validate","default","Date","date","end","weekdays","Array","input","split","isArray","length","i","x","validateNumber","hideHeader","Boolean","shortWeekdays","weekdayFormat","Function","dayFormat","intervals","maxDays","Number","shortIntervals","intervalHeight","intervalWidth","intervalMinutes","firstInterval","intervalCount","intervalFormat","intervalStyle","showIntervalLabel","weeks","minWeeks","shortMonths","showMonthOnFirst","monthFormat","calendar","value","events","eventStart","eventEnd","eventHeight","eventColor","eventTextColor","eventName","eventOverlapThreshold","eventMore","eventMoreText","eventRipple","Object","eventMarginBottom","isFinite","parseInt"],"mappings":"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","sourcesContent":["import { validateTimestamp, parseDate, DAYS_IN_WEEK } from './timestamp';\nexport default {\n  base: {\n    start: {\n      type: String,\n      validate: validateTimestamp,\n      default: () => parseDate(new Date()).date\n    },\n    end: {\n      type: String,\n      validate: validateTimestamp\n    },\n    weekdays: {\n      type: [Array, String],\n      default: () => [0, 1, 2, 3, 4, 5, 6],\n\n      validate(input) {\n        if (typeof input === 'string') {\n          input = input.split(',');\n        }\n\n        if (Array.isArray(input)) {\n          if (input.length > DAYS_IN_WEEK || input.length === 0) {\n            return false;\n          }\n\n          for (let i = 0; i < input.length; i++) {\n            const x = input[i];\n\n            if (!validateNumber(x) || x < 0 || x >= DAYS_IN_WEEK) {\n              return false;\n            }\n          }\n\n          return true;\n        }\n\n        return false;\n      }\n\n    },\n    hideHeader: {\n      type: Boolean,\n      default: false\n    },\n    shortWeekdays: {\n      type: Boolean,\n      default: true\n    },\n    weekdayFormat: {\n      type: Function,\n      default: null\n    },\n    dayFormat: {\n      type: Function,\n      default: null\n    }\n  },\n  intervals: {\n    maxDays: {\n      type: Number,\n      default: 7\n    },\n    shortIntervals: {\n      type: Boolean,\n      default: true\n    },\n    intervalHeight: {\n      type: [Number, String],\n      default: 40,\n      validate: validateNumber\n    },\n    intervalWidth: {\n      type: [Number, String],\n      default: 45,\n      validate: validateNumber\n    },\n    intervalMinutes: {\n      type: [Number, String],\n      default: 60,\n      validate: validateNumber\n    },\n    firstInterval: {\n      type: [Number, String],\n      default: 0,\n      validate: validateNumber\n    },\n    intervalCount: {\n      type: [Number, String],\n      default: 24,\n      validate: validateNumber\n    },\n    intervalFormat: {\n      type: Function,\n      default: null\n    },\n    intervalStyle: {\n      type: Function,\n      default: null\n    },\n    showIntervalLabel: {\n      type: Function,\n      default: null\n    }\n  },\n  weeks: {\n    minWeeks: {\n      validate: validateNumber,\n      default: 1\n    },\n    shortMonths: {\n      type: Boolean,\n      default: true\n    },\n    showMonthOnFirst: {\n      type: Boolean,\n      default: true\n    },\n    monthFormat: {\n      type: Function,\n      default: null\n    }\n  },\n  calendar: {\n    type: {\n      type: String,\n      default: 'month'\n    },\n    value: {\n      type: String,\n      validate: validateTimestamp\n    }\n  },\n  events: {\n    events: {\n      type: Array,\n      default: () => []\n    },\n    eventStart: {\n      type: String,\n      default: 'start'\n    },\n    eventEnd: {\n      type: String,\n      default: 'end'\n    },\n    eventHeight: {\n      type: Number,\n      default: 20\n    },\n    eventColor: {\n      type: [String, Function],\n      default: 'secondary'\n    },\n    eventTextColor: {\n      type: [String, Function],\n      default: 'white'\n    },\n    eventName: {\n      type: [String, Function],\n      default: 'name'\n    },\n    eventOverlapThreshold: {\n      type: Number,\n      default: 60\n    },\n    eventMore: {\n      type: Boolean,\n      default: true\n    },\n    eventMoreText: {\n      type: String,\n      default: '$vuetify.calendar.moreEvents'\n    },\n    eventRipple: {\n      type: [Boolean, Object],\n      default: null\n    },\n    eventMarginBottom: {\n      type: Number,\n      default: 1\n    }\n  }\n};\nexport function validateNumber(input) {\n  return isFinite(parseInt(input));\n}\n//# sourceMappingURL=props.js.map"]}]}